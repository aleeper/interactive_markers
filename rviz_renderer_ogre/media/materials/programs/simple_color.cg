struct VPOutput
{
  float4 position : POSITION;
  float4 color : COLOR;
  float3 norm_in_tex : TEXCOORD0;
};

VPOutput simpleColorVP_main(float4 position : POSITION, 
                            float4 color : COLOR,
                            float3 normal : NORMAL, 
                                           
                            uniform float4x4 worldviewproj)
{
  VPOutput OUT;
  OUT.position = mul(worldviewproj, position);
  OUT.color = color;
  OUT.norm_in_tex = normal;
  return OUT;
}

struct FPOutput
{
  float4 color : COLOR;
};

FPOutput simpleColorFP_main(float3 norm : TEXCOORD0, 
						                uniform float4 color,
						                uniform float4 view_dir,
						                uniform float4 view_side,
						                uniform float4 view_up)
{
  float3x3 view_mat = float3x3(view_side.xyz, view_up.xyz, view_dir.xyz);
  float3 light_vec = mul(view_mat, normalize(float3(1.0, 1.0, -1.0)));
  float3 dir = light_vec;
  float ldotn = dot(dir, norm);
  float b = 0.4;
  float y = 0.4;
  float alpha = 0.2;
  float beta = 0.6;
  float3 kcool = float3(0.0, 0.0, b) + alpha * color.rgb;
  float3 kwarm = float3(y, y, 0.0) + beta * color.rgb;
  float one_plus_ldotn_div_2 = (1 + ldotn)/2.0;
  float3 I = (one_plus_ldotn_div_2 * kwarm) + (1 - one_plus_ldotn_div_2) * kcool;  

  FPOutput OUT;
  OUT.color = float4(I, color.a);
  //OUT.color = float4(ldotn, ldotn, ldotn, 1.0);
  //OUT.color = color;
  return OUT;
}
