struct ColorAndNormal
{
  float4 color;
  float3 normal;
};

float4 calculateBillboardColorWithEdge(float4 color, float3 tex)
{
  float ax = 0.5 - tex.x;
  float ay = 0.5 - tex.y;
  float blend = smoothstep(0.02, 0.05, ay) * (1 - smoothstep(0.95, 0.98, ay)) *
                smoothstep(0.02, 0.05, ax) * (1 - smoothstep(0.95, 0.98, ax));
  float inv_blend = 1.0 - blend;
  float3 col = blend * color.xyz + (sign(0.5 - length(float3(color.xyz))) * float3(0.2, 0.2, 0.2) + color.xyz) * inv_blend;
  return float4(col, color.a);
}

ColorAndNormal calculateBillboardSphereColorAndNormal(float4 color, float3 tex)
{
  half rsquared = tex.x*tex.x + tex.y*tex.y;
  half a = 0.25 - rsquared;

  discard(a < 0);
  
  ColorAndNormal OUT;
  OUT.color = color;
  float z = 0.5 - rsquared;
  OUT.normal = normalize(float3(tex.x, tex.y, z));
  return OUT;
}

float4 calculateBillboardSpherePickColor(float4 color, float3 tex)
{
  float rsquared = tex.x*tex.x + tex.y*tex.y;
  float a = (0.25 - rsquared) * 4.0;
  return float4(color.xyz, color.a * ceil(a));
}


